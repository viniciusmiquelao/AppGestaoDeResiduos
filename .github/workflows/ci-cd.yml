name: CI/CD Pipeline

on:
  push:
    branches:
      - main # Gatilho para a execução do pipeline quando houver push para a branch main
  pull_request:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Check out code
        uses: actions/checkout@v2

      - name: Install libssl dependencies
        run: sudo apt-get update && sudo apt-get install -y libssl-dev

      - name: Set up .NET
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: "8.0" # Ou a versão que você estiver utilizando

      - name: Restore dependencies
        run: dotnet restore

      - name: Build the project
        run: dotnet build --configuration Release

  deploy_staging:
    runs-on: ubuntu-latest
    needs: build
    if: github.ref == 'refs/heads/staging' # Garante que o deploy em staging ocorra apenas quando for a branch staging

    steps:
      - name: Set up Render CLI
        run: |
          curl -fsSL https://render.com/download/render-cli | bash
          export PATH=$PATH:$HOME/render-cli

      - name: Authenticate to Render
        run: echo ${{ secrets.RENDER_API_KEY }} | render login --api-key

      - name: Deploy to Render Staging
        run: |
          render deploy --service your-staging-service-name --branch staging
        env:
          RENDER_API_KEY: ${{ secrets.RENDER_API_KEY }}

  deploy_production:
    runs-on: ubuntu-latest
    needs: deploy_staging
    if: github.ref == 'refs/heads/main' # Garante que o deploy em produção ocorra apenas quando for a branch main

    steps:
      - name: Set up Render CLI
        run: |
          curl -fsSL https://render.com/download/render-cli | bash
          export PATH=$PATH:$HOME/render-cli

      - name: Authenticate to Render
        run: echo ${{ secrets.RENDER_API_KEY }} | render login --api-key

      - name: Deploy to Render Production
        run: |
          render deploy --service your-production-service-name --branch main
        env:
          RENDER_API_KEY: ${{ secrets.RENDER_API_KEY }}
