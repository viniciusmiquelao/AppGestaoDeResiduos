name: CI/CD Pipeline

on:
  push:
    branches:
      - main # Gatilho para a execução do pipeline quando houver push para a branch main
      - staging # Gatilho para a execução do pipeline quando houver push para a branch staging
  pull_request:
    branches:
      - main
      - staging
  workflow_dispatch: # Permite disparar o workflow manualmente

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Check out code
        uses: actions/checkout@v2

      - name: Install libssl dependencies
        run: sudo apt-get update && sudo apt-get install -y libssl-dev

      - name: Set up .NET
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: "8.0" # Ou a versão que você estiver utilizando

      - name: Restore dependencies
        run: dotnet restore

      - name: Build the project
        run: dotnet build --configuration Release

  deploy_staging:
    runs-on: ubuntu-latest
    needs: build
    if: github.ref == 'refs/heads/staging'

    steps:
      - name: Check out code
        uses: actions/checkout@v2

      - name: Authenticate to Render
        run: git remote add render https://git.render.com/viniciusmiquelao/AppGestaoDeResiduos.git

      - name: Fetch remote branches
        run: git fetch origin # Garante que todas as branches remotas sejam baixadas

      - name: Checkout to staging branch
        run: |
          git checkout staging || git checkout -b staging origin/staging  # Cria a branch 'staging' se não existir

      - name: Deploy to Render Staging
        run: |
          git push render staging:main  # Push para a branch staging no Render
        env:
          RENDER_API_KEY: ${{ secrets.RENDER_API_KEY }}

  deploy_production:
    runs-on: ubuntu-latest
    needs: build
    if: github.ref == 'refs/heads/main'

    steps:
      - name: Check out code
        uses: actions/checkout@v2

      - name: Authenticate to Render
        run: git remote add render https://git.render.com/viniciusmiquelao/AppGestaoDeResiduos.git

      - name: Fetch remote branches
        run: git fetch origin # Garante que todas as branches remotas sejam baixadas

      - name: Checkout to main branch
        run: |
          git checkout main || git checkout -b main origin/main  # Cria a branch 'main' se não existir

      - name: Deploy to Render Main
        run: |
          git push render main:main  # Push para a branch main no Render
        env:
          RENDER_API_KEY: ${{ secrets.RENDER_API_KEY }}
