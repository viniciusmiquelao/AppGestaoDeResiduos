-- 1. Criar a tabela tb_endereco
CREATE TABLE tb_endereco (
    endereco_id INTEGER GENERATED ALWAYS AS IDENTITY PRIMARY KEY,
    cep INTEGER NOT NULL,
    estado VARCHAR2(50) NOT NULL,
    cidade VARCHAR2(50) NOT NULL,
    rua VARCHAR2(100) NOT NULL,
    numero INTEGER NOT NULL,
    usuario_id INTEGER, -- Adicionando a coluna usuario_id para o relacionamento 1:1
    UNIQUE (usuario_id)
);

-- 2. Criar a tabela tb_usuario
CREATE TABLE tb_usuario (
    usuario_id NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    nome VARCHAR2(20),
    email VARCHAR2(100) UNIQUE, -- Restrição de unicidade
    agendou_coleta NUMBER(1), -- Valor booleano (0 ou 1)
    foi_notificado NUMBER(1), -- Valor booleano (0 ou 1)
    endereco_id INTEGER, -- Adicionando a coluna endereco_id para o relacionamento 1:1
    UNIQUE (endereco_id)
);

-- 3. Criar a tabela tb_localizacao
CREATE TABLE tb_localizacao (
    localizacao_id NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    longitude NUMBER,
    latitude NUMBER,
    data_hora TIMESTAMP
);

-- 4. Criar a tabela tb_notificacao
CREATE TABLE tb_notificacao (
    notificacao_id NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,    
    mensagem VARCHAR2(250)
);

-- 5. Criar a tabela tb_caminhao
CREATE TABLE tb_caminhao (
    caminhao_id NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    placa VARCHAR2(7),
    qtd_de_coletas NUMBER,
    qtd_de_coletas_max NUMBER,
    localizacao_id NUMBER, -- Chave estrangeira para tb_localizacao
    CONSTRAINT fk_caminhao_localizacao FOREIGN KEY (localizacao_id) REFERENCES tb_localizacao(localizacao_id)
);

-- 6. Criar a tabela tb_coleta
CREATE TABLE tb_coleta (
    coleta_id NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    qtd_de_coleta NUMBER,
    data_coleta DATE,
    endereco_id NUMBER, -- Chave estrangeira para tb_endereco
    caminhao_id NUMBER, -- Chave estrangeira para tb_caminhao
    CONSTRAINT fk_coleta_endereco FOREIGN KEY (endereco_id) REFERENCES tb_endereco(endereco_id),
    CONSTRAINT fk_coleta_caminhao FOREIGN KEY (caminhao_id) REFERENCES tb_caminhao(caminhao_id)
);

-- 7. Criar a tabela tb_usuario_notificacao
CREATE TABLE tb_usuario_notificacao (
    usuario_notificacao_id NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    notificacao_id NUMBER, -- Chave estrangeira para tb_notificacao
    usuario_id NUMBER, -- Chave estrangeira para tb_usuario
    data_notificacao DATE,
    CONSTRAINT fk_usuario_notificacao_notificacao FOREIGN KEY (notificacao_id) REFERENCES tb_notificacao(notificacao_id),
    CONSTRAINT fk_usuario_notificacao_usuario FOREIGN KEY (usuario_id) REFERENCES tb_usuario(usuario_id)
);

-- 8. Criar a tabela tb_usuario_coleta
CREATE TABLE tb_usuario_coleta (
    usuario_coleta_id NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    usuario_id NUMBER, -- Chave estrangeira para tb_usuario
    coleta_id NUMBER, -- Chave estrangeira para tb_coleta
    CONSTRAINT fk_usuario_coleta_usuario FOREIGN KEY (usuario_id) REFERENCES tb_usuario(usuario_id),
    CONSTRAINT fk_usuario_coleta_coleta FOREIGN KEY (coleta_id) REFERENCES tb_coleta(coleta_id)
);

-- 9. Adicionando chaves estrangeiras bilaterais de usuário e endereco
ALTER TABLE tb_usuario 
ADD CONSTRAINT fk_endereco FOREIGN KEY (endereco_id) 
REFERENCES tb_endereco (endereco_id);


ALTER TABLE tb_endereco 
ADD CONSTRAINT fk_usuario FOREIGN KEY (usuario_id) 
REFERENCES tb_usuario (usuario_id);

-- Área de testes
ALTER TABLE tb_usuario_notificacao
ADD data_notificacao DATE;
ALTER TABLE tb_notificacao
DROP COLUMN data_notificacao;




